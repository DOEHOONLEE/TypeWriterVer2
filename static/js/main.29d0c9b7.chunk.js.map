{"version":3,"sources":["WordsPerMin.js","UserInput.js","WordDisplay.js","Timer.js","App.js","index.js"],"names":["WordsPerMin","count","UserInput","useState","userInput","setUserInput","counter","setCounter","getWord","faker","random","word","toLowerCase","split","randomWord","setRandomWord","emptyUserInput","type","onChange","e","target","value","onKeyPress","charCode","WordDisplay","includes","style","color","Timer","timeleft","App","secLeft","setSecLeft","React","useEffect","setTimeout","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAaeA,MAXf,YAAiC,IAAVC,EAAS,EAATA,MAEnB,OACI,6BACI,8CACoBA,K,gBCgDjBC,MAlDf,WAAsB,IAAD,EAEiBC,mBAAS,IAF1B,mBAEVC,EAFU,KAECC,EAFD,OAIaF,mBAAS,GAJtB,mBAIVG,EAJU,KAIDC,EAJC,KAMXC,EAAUC,IAAMC,OAAOC,OAAOC,cAAcC,MAAM,KAAK,GAN5C,EAQmBV,mBAASK,GAR5B,mBAQVM,EARU,KAQEC,EARF,KA0BXC,EAAiB,WACnBD,EAAcP,GACdH,EAAa,KAGjB,OACI,6BACI,kBAAC,EAAD,CACIM,KAAMG,EACNV,UAAWA,IAEf,2BACIa,KAAK,OACLC,SA7BK,SAACC,GACdd,EAAac,EAAEC,OAAOC,QA6BdA,MAAOjB,EACPkB,WA3BW,SAACH,GACD,KAAfA,EAAEI,WACEnB,IAAcU,GACdP,EAAWD,EAAU,GACrBU,KAGAA,QAsBJ,kBAAC,EAAD,CACIf,MAAOK,MCnCRkB,MAXf,YAA2C,IAApBb,EAAmB,EAAnBA,KAAMP,EAAa,EAAbA,UAEzB,OACI,6BACI,4BACMO,EAAKc,SAASrB,GAA0D,4BAAKO,GAAlD,wBAAIe,MAAO,CAACC,MAAO,YAAahB,MCK9DiB,MAXf,YAA8B,IAAbC,EAAY,EAAZA,SAEb,OACI,6BAEKA,EAAW,EAAI,gDAAsBA,GAAiB,+C,QCiBpDC,MAlBf,WAAgB,IAAD,EAEiB3B,mBAAS,IAF1B,mBAEN4B,EAFM,KAEGC,EAFH,KAUb,OANAC,IAAMC,WAAU,WACVH,EAAU,GACZI,YAAW,kBAAMH,EAAWD,EAAU,KAAI,QAK5C,yBAAKK,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOP,SAAUE,MCfvBM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.29d0c9b7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction WordsPerMin({ count }) {\r\n\r\n    return (\r\n        <div>\r\n            <h3>\r\n                correct words: {count}\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WordsPerMin;","import React, { useState } from 'react';\r\nimport WordsPerMin from './WordsPerMin';\r\nimport WordDisplay from './WordDisplay';\r\nimport faker, { random } from 'faker';\r\n\r\nfunction UserInput() {\r\n\r\n    const [userInput, setUserInput] = useState('');\r\n\r\n    const [counter, setCounter] = useState(0);\r\n    \r\n    const getWord = faker.random.word().toLowerCase().split(\" \")[0];\r\n\r\n    const [randomWord, setRandomWord] = useState(getWord);\r\n\r\n    const onChange = (e) => {\r\n        setUserInput(e.target.value);\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.charCode === 13) {\r\n            if (userInput === randomWord) {\r\n                setCounter(counter + 1);\r\n                emptyUserInput();\r\n            }\r\n            else {\r\n                emptyUserInput();\r\n            }\r\n        }\r\n    }\r\n    \r\n    const emptyUserInput = () => {\r\n        setRandomWord(getWord);\r\n        setUserInput('');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <WordDisplay\r\n                word={randomWord}\r\n                userInput={userInput}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                value={userInput}\r\n                onKeyPress={handleKeyPress}\r\n            />\r\n            <WordsPerMin\r\n                count={counter}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserInput;","import React from 'react';\r\nimport UserInput from './UserInput';\r\n\r\nfunction WordDisplay({ word, userInput }) {\r\n    \r\n    return (\r\n        <div>\r\n            <h1>\r\n                {!word.includes(userInput) ? <h1 style={{color: \"hotpink\"}}>{word}</h1> : <h1>{word}</h1>}\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WordDisplay;","import React, { useState } from 'react';\r\n\r\nfunction Timer({ timeleft }) {\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {timeleft > 0 ? <h1>Time Remaining : {timeleft}</h1> : <h1>Game Finished</h1>}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React, { useState, useEffect } from 'react';\nimport WordDisplay from './WordDisplay';\nimport UserInput from './UserInput';\nimport Timer from './Timer';\nimport './App.css';\n\nfunction App() {\n\n  const [secLeft, setSecLeft] = useState(60);\n\n  React.useEffect(() => {\n    if (secLeft > 0) {\n      setTimeout(() => setSecLeft(secLeft - 1), 1000);\n    }\n  });\n\n  return (\n    <div className=\"gameBoard\">\n      <UserInput />\n      <Timer timeleft={secLeft} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}