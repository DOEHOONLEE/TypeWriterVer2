{"version":3,"sources":["WordsPerMin.js","WordDisplay.js","UserInput.js","Timer.js","StartGame.js","History.js","hooks/useLocalStorage.js","App.js","index.js","switch2.ogg"],"names":["WordsPerMin","count","WordDisplay","word","userInput","includes","style","color","UserInput","onChange","counter","randomWord","getWord","handleKeyPress","inputFocus","className","type","placeholder","value","onKeyPress","ref","autoCapitalize","Timer","secLeft","StartGame","props","state","seconds","stop","gamecheck","bind","onStart","onReset","setData","this","alert","timer","setState","interval","setInterval","prevNum","userRecord","clearInterval","console","log","onClick","Component","HistoryContainer","styled","div","History","histories","obj_deserialized","JSON","parse","localStorage","getItem","map","c","key","id","date","record","useLocalStorage","initialValue","useState","item","window","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","App","setUserInput","setCounter","faker","random","toLowerCase","split","setRandomWord","setHistories","useRef","emptyUserInput","counterReset","e","target","Audio","Switch2","play","charCode","current","focus","empty","wpm","today","Date","getFullYear","toLocaleString","month","getDate","getHours","getMinutes","nextId","length","Math","max","newRecord","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0e5650c8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction WordsPerMin({ count }) {\n\n    return (\n        <div>\n            <h3>\n                correct words: {count}\n            </h3>\n        </div>\n    );\n}\n\nexport default WordsPerMin;","import React from 'react';\n\nfunction WordDisplay({ word, userInput }) {\n    \n    return (\n        <div>\n                {!word.includes(userInput) ? <h1 style={{color: \"hotpink\"}}>{word}</h1> : <h1>{word}</h1>}\n        </div>\n    );\n};\n\nexport default WordDisplay;","import React from 'react';\nimport WordsPerMin from './WordsPerMin';\nimport WordDisplay from './WordDisplay';\n\nfunction UserInput({ onChange, userInput, counter, getWord, randomWord, handleKeyPress, inputFocus }) {\n\n    return(\n        <div>\n            <WordDisplay\n                word={randomWord}\n                userInput={userInput}\n            />\n            <input\n                className=\"userInput\"\n                type=\"text\"\n                placeholder=\"click START to play\"\n                onChange={onChange}\n                value={userInput}\n                onKeyPress={handleKeyPress}\n                ref={inputFocus}\n                autoCapitalize=\"none\"\n            />\n            <WordsPerMin\n                count={counter}\n            />\n        </div>\n    );\n};\n\nexport default UserInput;","import React from 'react';\n\nfunction Timer({secLeft}) {\n\n    return (\n        <div>\n            <h1>\n                    Time Remaining : {secLeft}\n            </h1>\n        </div>\n    );\n}\n\nexport default Timer;","import React, { Component } from 'react';\nimport Timer from './Timer';\n\nclass StartGame extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            seconds: 5,\n            stop: true\n        };\n        \n        this.gamecheck = this.gamecheck.bind(this);\n        this.onStart = this.props.onStart;\n        this.onReset = this.props.onReset;\n        this.setData = this.props.setData;\n    }\n\n    gamecheck() {\n        if (this.state.seconds < 5) {\n            alert(\"You are already in a game!\");\n        }\n        else {\n            this.timer();\n        }\n    }\n\n    timer() {\n        this.onStart();\n\n        this.setState({\n            ...this.state,\n            stop: false\n        })\n        this.interval = setInterval(\n            () => {\n                if (this.state.seconds > 0 && !this.state.stop) {\n                    this.setState(prevNum => ({\n                        seconds: prevNum.seconds - 1\n                    }));\n                }\n                else {\n                    const userRecord = this.props.counter;\n\n                    this.setData(userRecord);\n\n                    this.setState({\n                        seconds: 5,\n                        stop: true\n                    });\n\n                    this.onReset();\n                    clearInterval(this.interval);\n                }\n                console.log(this.state.seconds)\n            },\n            1000\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <button\n                    onClick={this.gamecheck}\n                    className=\"startButton\"\n                >\n                    Start\n                </button>\n                <Timer secLeft={this.state.seconds} />\n            </div>\n        );\n    }\n}\n\nexport default StartGame;","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Scores({ date, wpm, index }) {\n    return (\n        <h3 className=\"historyList highlight\">\n            {index+1}. &nbsp; {date} [{wpm} WPM]\n        </h3>\n    )\n}\n\nconst HistoryContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin: 0 auto;\n    width: 330px;\n    height: 30px;\n    font-size: 21px;\n    margin-bottom: 10px;\n    border-bottom: 1px solid grey;\n`;\n\nfunction History({ histories }) {\n    \n    const obj_deserialized = JSON.parse(localStorage.getItem(\"records\"));\n\n    console.log(obj_deserialized);\n\n    return (\n        <div>\n            <h2 className=\"historyList\">\n                Ranking History\n            </h2>\n            {\n                histories.map(c => (\n                    <HistoryContainer key={c.id}>\n                        <span>{c.date}</span>\n                        <span>{c.record} (WPM)</span>\n                    </HistoryContainer>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default History;","import { useState } from 'react';\n\n// Hook\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;","import React, { useState, useRef } from 'react';\nimport UserInput from './UserInput';\nimport StartGame from './StartGame';\nimport History from './History';\nimport faker, { random } from 'faker';\nimport Switch2 from './switch2.ogg';\nimport './App.css';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nfunction App() {\n\n  const [userInput, setUserInput] = useState('');\n\n  const [counter, setCounter] = useState(0);\n  \n  const getWord = faker.random.word().toLowerCase().split(\" \")[0];\n\n  const [randomWord, setRandomWord] = useState(getWord);\n\n  const [histories, setHistories] = useLocalStorage(\"records\", []);\n\n  const { date, record } = histories;\n\n  const inputFocus = useRef();\n\n  // const nextID = useRef(1);\n\n  const onChange = (e) => {\n      setUserInput(e.target.value);\n      const typingSound = new Audio (Switch2);\n      typingSound.play();\n  }\n  \n  const handleKeyPress = (e) => {\n      if (e.charCode === 13) {\n          if (userInput === randomWord) {\n              setCounter(counter + 1);\n              emptyUserInput();\n          }\n          else {\n              emptyUserInput();\n          }\n      }\n  };\n\n  const setData = (wpm) => {\n    const today = new Date();\n\n    const date = `${today.getFullYear()}.${today.toLocaleString('default', { month: 'short' })}.${today.getDate()}-${today.getHours()}:${today.getMinutes()}`;\n    const record = wpm;\n    const nextId = histories.length > 0 ? Math.max(...histories.map(c => c.id)) + 1 : 0;\n    console.log(histories);\n\n    const newRecord = {\n      id: nextId,\n      date: date,\n      record: wpm,\n    };\n\n    console.log(newRecord);\n    setHistories([...histories, newRecord]);\n    console.log(histories)\n  };\n  \n  const emptyUserInput = () => {\n      setRandomWord(getWord);\n      setUserInput('');\n  };\n\n  const counterReset = () => {\n    setCounter(0);\n  };\n\n  const onStart = () => {\n    inputFocus.current.focus();\n    emptyUserInput();\n    counterReset();\n  };\n  \n  const onReset = () => {\n    emptyUserInput();\n    counterReset();\n  };\n\n  return (\n    <div className=\"gameBoard\">\n      <UserInput\n        onChange={onChange}\n        userInput={userInput}\n        counter={counter}\n        getWord={getWord}\n        randomWord={randomWord}\n        handleKeyPress={handleKeyPress}\n        inputFocus={inputFocus}\n      />\n      <StartGame\n        onStart={onStart}\n        onReset={onReset}\n        empty={emptyUserInput}\n        setData={setData}\n        counter={counter}\n      />\n      <History\n        histories={histories}\n      />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","module.exports = __webpack_public_path__ + \"static/media/switch2.563d3524.ogg\";"],"sourceRoot":""}