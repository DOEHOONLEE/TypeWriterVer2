{"version":3,"sources":["WordsPerMin.js","UserInput.js","WordDisplay.js","Timer.js","StartGame.js","App.js","index.js"],"names":["WordsPerMin","count","UserInput","onChange","userInput","counter","randomWord","getWord","handleKeyPress","word","type","value","onKeyPress","WordDisplay","includes","style","color","Timer","secLeft","StartGame","App","useState","setUserInput","setCounter","faker","random","toLowerCase","split","setRandomWord","setSecLeft","React","useEffect","setTimeout","emptyUserInput","className","e","target","charCode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAaeA,MAXf,YAAiC,IAAVC,EAAS,EAATA,MAEnB,OACI,6BACI,8CACoBA,K,gBCgDjBC,MAlDf,YAA2F,IAAtEC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,UAAWC,EAAgD,EAAhDA,QAAkBC,GAA8B,EAAvCC,QAAuC,EAA9BD,YAAYE,EAAkB,EAAlBA,eA+BpE,OACI,6BACI,kBAAC,EAAD,CACIC,KAAMH,EACNF,UAAWA,IAEf,2BACIM,KAAK,OACLP,SAAUA,EACVQ,MAAOP,EACPQ,WAAYJ,IAEhB,kBAAC,EAAD,CACIP,MAAOI,MCnCRQ,MAXf,YAA2C,IAApBJ,EAAmB,EAAnBA,KAAML,EAAa,EAAbA,UAEzB,OACI,6BACI,4BACMK,EAAKK,SAASV,GAA0D,4BAAKK,GAAlD,wBAAIM,MAAO,CAACC,MAAO,YAAaP,MCK9DQ,MAXf,YAA2B,IAAXC,EAAU,EAAVA,QAEZ,OACI,6BAEKA,EAAU,EAAI,gDAAsBA,GAAgB,+CCMlDC,MAXf,WAEI,OACI,6BAEI,iD,QC0DGC,MAzDf,WAAgB,IAAD,EAEqBC,mBAAS,IAF9B,mBAENjB,EAFM,KAEKkB,EAFL,OAIiBD,mBAAS,GAJ1B,mBAINhB,EAJM,KAIGkB,EAJH,KAMPhB,EAAUiB,IAAMC,OAAOhB,OAAOiB,cAAcC,MAAM,KAAK,GANhD,EAQuBN,mBAASd,GARhC,mBAQND,EARM,KAQMsB,EARN,OAUiBP,mBAAS,IAV1B,mBAUNH,EAVM,KAUGW,EAVH,KAgBbC,IAAMC,WAAU,WACVb,EAAU,GACZc,YAAW,kBAAMH,EAAWX,EAAU,KAAI,QAI9C,IAYMe,EAAiB,WACnBL,EAAcrB,GACde,EAAa,KAGjB,OACE,yBAAKY,UAAU,aACb,kBAAC,EAAD,CACE/B,SA9BW,SAACgC,GACdb,EAAaa,EAAEC,OAAOzB,QA8BpBP,UAAWA,EACXC,QAASA,EACTE,QAASA,EACTD,WAAYA,EACZE,eAzBiB,SAAC2B,GACD,KAAfA,EAAEE,WACEjC,IAAcE,GACdiB,EAAWlB,EAAU,GACrB4B,KAGAA,QAoBR,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEf,QAASA,MCvDjBoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4485a1ab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction WordsPerMin({ count }) {\r\n\r\n    return (\r\n        <div>\r\n            <h3>\r\n                correct words: {count}\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WordsPerMin;","import React, { useState } from 'react';\r\nimport WordsPerMin from './WordsPerMin';\r\nimport WordDisplay from './WordDisplay';\r\nimport faker, { random } from 'faker';\r\n\r\nfunction UserInput({ onChange, userInput, counter, getWord, randomWord, handleKeyPress }) {\r\n\r\n    // const [userInput, setUserInput] = useState('');\r\n\r\n    // const [counter, setCounter] = useState(0);\r\n    \r\n    // const getWord = faker.random.word().toLowerCase().split(\" \")[0];\r\n\r\n    // const [randomWord, setRandomWord] = useState(getWord);\r\n\r\n    // const onChange = (e) => {\r\n    //     setUserInput(e.target.value);\r\n    // }\r\n\r\n    // const handleKeyPress = (e) => {\r\n    //     if (e.charCode === 13) {\r\n    //         if (userInput === randomWord) {\r\n    //             setCounter(counter + 1);\r\n    //             emptyUserInput();\r\n    //         }\r\n    //         else {\r\n    //             emptyUserInput();\r\n    //         }\r\n    //     }\r\n    // }\r\n    \r\n    // const emptyUserInput = () => {\r\n    //     setRandomWord(getWord);\r\n    //     setUserInput('');\r\n    // }\r\n\r\n    return(\r\n        <div>\r\n            <WordDisplay\r\n                word={randomWord}\r\n                userInput={userInput}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                value={userInput}\r\n                onKeyPress={handleKeyPress}\r\n            />\r\n            <WordsPerMin\r\n                count={counter}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserInput;","import React from 'react';\r\nimport UserInput from './UserInput';\r\n\r\nfunction WordDisplay({ word, userInput }) {\r\n    \r\n    return (\r\n        <div>\r\n            <h1>\r\n                {!word.includes(userInput) ? <h1 style={{color: \"hotpink\"}}>{word}</h1> : <h1>{word}</h1>}\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WordDisplay;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction Timer({secLeft}) {\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {secLeft > 0 ? <h1>Time Remaining : {secLeft}</h1> : <h1>Game Finished</h1>}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\n\r\nfunction StartGame() {\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <button>START GAME!</button>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartGame;","import React, { useState, useEffect } from 'react';\nimport WordDisplay from './WordDisplay';\nimport UserInput from './UserInput';\nimport Timer from './Timer';\nimport StartGame from './StartGame';\nimport faker, { random } from 'faker';\nimport './App.css';\n\nfunction App() {\n\n  const [userInput, setUserInput] = useState('');\n\n  const [counter, setCounter] = useState(0);\n  \n  const getWord = faker.random.word().toLowerCase().split(\" \")[0];\n\n  const [randomWord, setRandomWord] = useState(getWord);\n\n  const [secLeft, setSecLeft] = useState(60);\n\n  const onChange = (e) => {\n      setUserInput(e.target.value);\n    }\n    \n  React.useEffect(() => {\n    if (secLeft > 0) {\n      setTimeout(() => setSecLeft(secLeft - 1), 1000);\n    }\n  });\n  \n  const handleKeyPress = (e) => {\n      if (e.charCode === 13) {\n          if (userInput === randomWord) {\n              setCounter(counter + 1);\n              emptyUserInput();\n          }\n          else {\n              emptyUserInput();\n          }\n      }\n  }\n  \n  const emptyUserInput = () => {\n      setRandomWord(getWord);\n      setUserInput('');\n  }\n\n  return (\n    <div className=\"gameBoard\">\n      <UserInput\n        onChange={onChange}\n        userInput={userInput}\n        counter={counter}\n        getWord={getWord}\n        randomWord={randomWord}\n        handleKeyPress={handleKeyPress}\n      />\n      <StartGame />\n      <Timer\n        secLeft={secLeft}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}